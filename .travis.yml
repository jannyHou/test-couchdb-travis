sudo: false
language: node_js
node_js:
  - "8"
  - "10"
  - "12"

os:
  - linux

script:
  - npm run postinstall
  - npm run build
  - npm run test:ci

env: TASK=test
install: npm ci --ignore-scripts

after_success:
  - if [[ "${TRAVIS_OS_NAME}" == "linux" ]] && [[ $(echo $TRAVIS_NODE_VERSION | cut -d'.' -f1) == "10" ]]; then npm run coverage:ci; fi

matrix:
  include:
    - node_js: "12"
      os: osx

      # using the default script to build & run the tests
    - node_js: "8"
      os: linux
      env: TASK=code-lint
      # Running Code Linter -- Requires @loopback/build so it's bootstrapped
      script:
        - lerna bootstrap --scope @loopback/build --include-filtered-dependencies
        - npm run lint
    - node_js: "8"
      os: linux
      env: TASK=commit-lint
      script: commitlint-travis
    - node_js: "8"
      os: linux
      env: TASK=verify-docs
      script: ./bin/verify-doc-changes.sh
    - node_js: "10"
      os: linux
      env:
        - TASK=test-repository-mongodb
      services:
        - mongodb
      script:
        - npm run postinstall -- --scope "@loopback/test-repository-mongodb" --include-filtered-dependencies
        - npm run build -- --scope "@loopback/test-repository-mongodb" --include-filtered-dependencies
        - cd acceptance/repository-mongodb && npm run mocha
    - node_js: "10"
      os: linux
      env:
        - TASK=test-repository-mysql
        - MYSQL_USER=test
        - MYSQL_PASSWORD=test
      services:
        - mysql
      before_install:
        - mysql -u root -e "CREATE USER 'test'@'localhost' IDENTIFIED BY 'test';"
        - mysql -e "use mysql; update user set authentication_string=PASSWORD('test') where User='test'; update user set plugin='mysql_native_password';FLUSH PRIVILEGES;"
        - mysql -e "GRANT ALL PRIVILEGES ON *.* TO 'test'@'localhost' WITH GRANT OPTION;FLUSH PRIVILEGES;"
        - mysql -e "GRANT SUPER ON *.* TO 'test'@'localhost' IDENTIFIED BY 'test';FLUSH PRIVILEGES;"
      script:
        - npm run postinstall -- --scope "@loopback/test-repository-mysql" --include-filtered-dependencies
        - npm run build -- --scope "@loopback/test-repository-mysql" --include-filtered-dependencies
        - cd acceptance/repository-mysql && npm run mocha
    - node_js: "10"
      os: linux
      env:
        - TASK=test-repository-cloudant
        - CLOUDANT_DATABASE=testdb
        - CLOUDANT_USER=admin
        - CLOUDANT_PASSWORD=pass
        - CLOUDANT_PORT=5984
      services:
        - couchdb
      before_script:
        - curl http://localhost:5984
        - curl -X PUT http://localhost:5984/testdb
        - curl -X PUT http://localhost:5984/_node/couchdb@localhost/_config/admins/admin -d '"pass"'
        - curl -s -X PUT http://localhost:5984/_config/admins/admin -d '"pass"'

      script:
        - npm run postinstall -- --scope "@loopback/test-repository-cloudant" --include-dependencies
        - npm run build -- --scope "@loopback/test-repository-cloudant" --include-dependencies
        - cd acceptance/repository-cloudant && npm run mocha

branches:
  only:
    - master
